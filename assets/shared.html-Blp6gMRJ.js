import{_ as s,c as n,o as e,d as a}from"./app-vjlVxZXw.js";const l={},o=a(`<h1 id="shared-methods" tabindex="-1"><a class="header-anchor" href="#shared-methods"><span>Shared Methods</span></a></h1><p>The following functions are available on both Node.js and Client.</p><h2 id="data-related" tabindex="-1"><a class="header-anchor" href="#data-related"><span>Data Related</span></a></h2><p>Encode/decode and zip/unzip data.</p><p>This is useful in markdown plugins when you want to encode string content and pass it to the component through props.</p><p>You may simply achieve this with <code>encodeURIComponent</code> and <code>decodeURIComponent</code>, but it can be very large if the content contains lots of special characters.</p><p>So we provide <code>encodeData</code> and <code>decodeData</code> to zip and encode content.</p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#DCDCAA;"> encodeData</span><span style="color:#D4D4D4;">: (</span></span>
<span class="line"><span style="color:#9CDCFE;">  data</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">  level</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">DeflateOptions</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">&#39;level&#39;</span><span style="color:#D4D4D4;">] = </span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#DCDCAA;"> decodeData</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">compressed</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> string</span></span>
<span class="line"></span></code></pre></div><details class="custom-container details"><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> content</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">\`</span></span>
<span class="line"><span style="color:#CE9178;">{</span></span>
<span class="line"><span style="color:#CE9178;">  &quot;type&quot;: &quot;bar&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">  &quot;data&quot;: {</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;labels&quot;: [&quot;Red&quot;, &quot;Blue&quot;, &quot;Yellow&quot;, &quot;Green&quot;, &quot;Purple&quot;, &quot;Orange&quot;],</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;datasets&quot;: [</span></span>
<span class="line"><span style="color:#CE9178;">      {</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;label&quot;: &quot;# of Votes&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;data&quot;: [12, 19, 3, 5, 2, 3],</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;backgroundColor&quot;: [</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 99, 132, 0.2)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(54, 162, 235, 0.2)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 206, 86, 0.2)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(75, 192, 192, 0.2)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(153, 102, 255, 0.2)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 159, 64, 0.2)&quot;</span></span>
<span class="line"><span style="color:#CE9178;">        ],</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;borderColor&quot;: [</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 99, 132, 1)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(54, 162, 235, 1)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 206, 86, 1)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(75, 192, 192, 1)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(153, 102, 255, 1)&quot;,</span></span>
<span class="line"><span style="color:#CE9178;">          &quot;rgba(255, 159, 64, 1)&quot;</span></span>
<span class="line"><span style="color:#CE9178;">        ],</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;borderWidth&quot;: 1</span></span>
<span class="line"><span style="color:#CE9178;">      }</span></span>
<span class="line"><span style="color:#CE9178;">    ]</span></span>
<span class="line"><span style="color:#CE9178;">  },</span></span>
<span class="line"><span style="color:#CE9178;">  &quot;options&quot;: {</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;scales&quot;: {</span></span>
<span class="line"><span style="color:#CE9178;">      &quot;y&quot;: {</span></span>
<span class="line"><span style="color:#CE9178;">        &quot;beginAtZero&quot;: true</span></span>
<span class="line"><span style="color:#CE9178;">      }</span></span>
<span class="line"><span style="color:#CE9178;">    }</span></span>
<span class="line"><span style="color:#CE9178;">  }</span></span>
<span class="line"><span style="color:#CE9178;">}</span></span>
<span class="line"><span style="color:#CE9178;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> prop</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">encodeData</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// &quot;eJyNUsFOwzAMve8rrHABKZqWlg5WxAE4cARxAMHEIV1NmQhNlaaCCe3fcdKtW0sLWGpjxy/v+UV512mlcIyfhTa2hHP4GgHYVYExsEQaxqlMpZWxbwAomaAqY5izO0wZB3apKnTrIyqlP1x2bRBzl9xWplC+eWNkniF7dmw1X4nWsfgaNtwNP2kfgH6Be22x9CPUUQ8yFwEHMeMQcog4UBFuiF0kcvGWGV3l6ZVW2uw0XDCTJfIwiOjYjAhESIcn4+BoT2MLio6pP6V+EBJ6AOSZgsmUwyl9A6ATwoiZn3lYTkTkRkycnuP8TU9ENPqUxuuA9i9BmxTNPy9A/G2/F9I23wtpW++FdIwPKzW2W5Afph+WqX2NQWz313XicT7XhV3qnB5f/ejKhVTYVACrXUqUmC3zC/uERsdgTYUdVr/Qb302+gZxe7S/&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">decodeData</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">prop</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// will be the original content</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// if you use \`encodeURIComponent\`, it will be much longer</span></span>
<span class="line"><span style="color:#DCDCAA;">encodeURIComponent</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">content</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// &#39;%0A%7B%0A%20%20%22type%22%3A%20%22bar%22%2C%0A%20%20%22data%22%3A%20%7B%0A%20%20%20%20%22labels%22%3A%20%5B%22Red%22%2C%20%22Blue%22%2C%20%22Yellow%22%2C%20%22Green%22%2C%20%22Purple%22%2C%20%22Orange%22%5D%2C%0A%20%20%20%20%22datasets%22%3A%20%5B%0A%20%20%20%20%20%20%7B%0A%20%20%20%20%20%20%20%20%22label%22%3A%20%22%23%20of%20Votes%22%2C%0A%20%20%20%20%20%20%20%20%22data%22%3A%20%5B12%2C%2019%2C%203%2C%205%2C%202%2C%203%5D%2C%0A%20%20%20%20%20%20%20%20%22backgroundColor%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%2099%2C%20132%2C%200.2)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(54%2C%20162%2C%20235%2C%200.2)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%20206%2C%2086%2C%200.2)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(75%2C%20192%2C%20192%2C%200.2)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(153%2C%20102%2C%20255%2C%200.2)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%20159%2C%2064%2C%200.2)%22%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%22borderColor%22%3A%20%5B%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%2099%2C%20132%2C%201)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(54%2C%20162%2C%20235%2C%201)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%20206%2C%2086%2C%201)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(75%2C%20192%2C%20192%2C%201)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(153%2C%20102%2C%20255%2C%201)%22%2C%0A%20%20%20%20%20%20%20%20%20%20%22rgba(255%2C%20159%2C%2064%2C%201)%22%0A%20%20%20%20%20%20%20%20%5D%2C%0A%20%20%20%20%20%20%20%20%22borderWidth%22%3A%201%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%5D%0A%20%20%7D%2C%0A%20%20%22options%22%3A%20%7B%0A%20%20%20%20%22scales%22%3A%20%7B%0A%20%20%20%20%20%20%22y%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22beginAtZero%22%3A%20true%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="type-helper" tabindex="-1"><a class="header-anchor" href="#type-helper"><span>Type Helper</span></a></h2><ul><li><code>isDef(x)</code>: Check if <code>x</code> is defined.</li><li><code>isBoolean(x)</code>: Check if <code>x</code> is a boolean.</li><li><code>isString(x)</code>: Check if <code>x</code> is a string.</li><li><code>isNumber(x)</code>: Check if <code>x</code> is a number.</li><li><code>isPlainObject(x)</code>: Check if <code>x</code> is a plain object.</li><li><code>isArray(x)</code>: Check if <code>x</code> is an array.</li><li><code>isFunction(x)</code>: Check if <code>x</code> is a function.</li><li><code>isRegExp(x)</code>: Check if <code>x</code> is a regular expression.</li></ul><h2 id="string-related" tabindex="-1"><a class="header-anchor" href="#string-related"><span>String Related</span></a></h2><ul><li><code>startsWith(a, b)</code>: Check if string <code>a</code> starts with string <code>b</code>.</li><li><code>endsWith(a, b)</code>: Check if string <code>a</code> ends with string <code>b</code>.</li></ul><p>Return <code>false</code> if <code>a</code> is not a string.</p><h2 id="object-related" tabindex="-1"><a class="header-anchor" href="#object-related"><span>Object Related</span></a></h2><ul><li><p><code>keys(x)</code>: Return an array of keys of object <code>x</code>.</p></li><li><p><code>values(x)</code>: Return an array of values of object <code>x</code>.</p></li><li><p><code>entries(x)</code>: Convert object <code>x</code> to an array of key-value pairs.</p></li><li><p><code>fromEntries(x)</code>: Convert an array of key-value pairs <code>x</code> to an object.</p></li><li><p><code>deepAssign(x, y, ...)</code>: A deep version of <code>Object.assign</code>.</p><details class="custom-container details"><summary>Example</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// or @vuepress/helper/client</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">deepAssign</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/helper&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> defaultOptions</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">  optionA:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    optionA1:</span><span style="color:#CE9178;"> &#39;defaultOptionA1&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    optionA2:</span><span style="color:#CE9178;"> &#39;defaultOptionA2&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    optionA3:</span><span style="color:#CE9178;"> &#39;defaultOptionA3&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;">  optionB:</span><span style="color:#569CD6;"> true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">  optionC:</span><span style="color:#CE9178;"> &#39;optionC&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> userOptions</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#9CDCFE;">  optionA:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    optionA1:</span><span style="color:#CE9178;"> &#39;optionA1&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#9CDCFE;">    optionA2:</span><span style="color:#CE9178;"> &#39;optionA2&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;">  optionB:</span><span style="color:#569CD6;"> false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">deepAssign</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">defaultOptions</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">userOptions</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;">// {</span></span>
<span class="line"><span style="color:#6A9955;">//   optionA: {</span></span>
<span class="line"><span style="color:#6A9955;">//     optionA1: &quot;optionA1&quot;,</span></span>
<span class="line"><span style="color:#6A9955;">//     optionA2: &quot;optionA2&quot;,</span></span>
<span class="line"><span style="color:#6A9955;">//     optionA3: &quot;defaultOptionA3&quot;,</span></span>
<span class="line"><span style="color:#6A9955;">//   },</span></span>
<span class="line"><span style="color:#6A9955;">//   optionB: false,</span></span>
<span class="line"><span style="color:#6A9955;">//   optionC: &quot;optionC&quot;,</span></span>
<span class="line"><span style="color:#6A9955;">// }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></li></ul><h2 id="date-related" tabindex="-1"><a class="header-anchor" href="#date-related"><span>Date Related</span></a></h2><ul><li><p><code>getDate(x)</code>: Convert input <code>x</code> to a date. It can support <code>Date</code>, timestamp, and date string. The support degree of date string depends on the <code>Date.parse</code> support degree of the environment. Return <code>null</code> when it cannot be converted to a date.</p><details class="custom-container details"><summary>Example</summary><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;2021-01-01&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// a Date object represents 2021-01-01</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1609459200000</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// a Date object represents 2021-01-01</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;2021-01-01T00:00:00.000Z&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// a Date object represents 2021-01-01</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;2021/01/01&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// a Date object represents 2021-01-01 (might be null in some browsers)</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;invalid date&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// null</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// null</span></span>
<span class="line"><span style="color:#DCDCAA;">getDate</span><span style="color:#D4D4D4;">(-</span><span style="color:#B5CEA8;">32</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">// null</span></span>
<span class="line"></span></code></pre></div></details></li><li><p><code>dateSorter</code>: Sort the values that can be converted to dates from new to old, and the values that cannot be converted to dates will be at the end.</p><details class="custom-container details"><summary>Example</summary><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#4FC1FF;"> arr</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;2020-01-01&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#B5CEA8;">  1609459200000</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;2022-01-01T00:00:00.000Z&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;2023/01/01&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#CE9178;">  &#39;invalid date&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#569CD6;">  undefined</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  -</span><span style="color:#B5CEA8;">32</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">arr</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">dateSorter</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;">// [</span></span>
<span class="line"><span style="color:#6A9955;">//   &#39;2023/01/01&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//   &#39;2022-01-01T00:00:00.000Z&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//   1609459200000,</span></span>
<span class="line"><span style="color:#6A9955;">//   &#39;2020-01-01&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//   &#39;invalid date&#39;,</span></span>
<span class="line"><span style="color:#6A9955;">//   undefined,</span></span>
<span class="line"><span style="color:#6A9955;">//   -32,</span></span>
<span class="line"><span style="color:#6A9955;">// ]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details></li></ul><h2 id="link-related" tabindex="-1"><a class="header-anchor" href="#link-related"><span>Link Related</span></a></h2><ul><li><code>isLinkHttp(x)</code>: Check if <code>x</code> is a valid HTTP URL.</li><li><code>isLinkWithProtocol(x)</code>: Check if <code>x</code> is a valid URL with protocol.</li><li><code>isLinkExternal(x)</code>: Check if <code>x</code> is a valid external URL.</li><li><code>isLinkAbsolute(x)</code>: Check if <code>x</code> is a valid absolute URL.</li><li><code>ensureEndingSlash(x)</code>: Ensure <code>x</code> ends with a slash.</li><li><code>ensureLeadingSlash(x)</code>: Ensure <code>x</code> starts with a slash.</li><li><code>removeEndingSlash(x)</code>: Ensure <code>x</code> does not end with a slash.</li><li><code>removeLeadingSlash(x)</code>: Ensure <code>x</code> does not start with a slash.</li></ul>`,20),p=[o];function t(i,c){return e(),n("div",null,p)}const d=s(l,[["render",t],["__file","shared.html.vue"]]),u=JSON.parse('{"path":"/tools/helper/shared.html","title":"Shared Methods","lang":"en-US","frontmatter":{"description":"Shared Methods The following functions are available on both Node.js and Client. Data Related Encode/decode and zip/unzip data. This is useful in markdown plugins when you want ...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://ecosystem.vuejs.press/ecosystem/zh/tools/helper/shared.html"}],["meta",{"property":"og:url","content":"https://ecosystem.vuejs.press/ecosystem/tools/helper/shared.html"}],["meta",{"property":"og:site_name","content":"VuePress Ecosystem"}],["meta",{"property":"og:title","content":"Shared Methods"}],["meta",{"property":"og:description","content":"Shared Methods The following functions are available on both Node.js and Client. Data Related Encode/decode and zip/unzip data. This is useful in markdown plugins when you want ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-10T01:40:28.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-10T01:40:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Shared Methods\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-10T01:40:28.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://ecosystem.vuejs.press/ecosystem/atom.xml","title":"VuePress Ecosystem Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://ecosystem.vuejs.press/ecosystem/feed.json","title":"VuePress Ecosystem JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://ecosystem.vuejs.press/ecosystem/rss.xml","title":"VuePress Ecosystem RSS Feed"}]]},"headers":[{"level":2,"title":"Data Related","slug":"data-related","link":"#data-related","children":[]},{"level":2,"title":"Type Helper","slug":"type-helper","link":"#type-helper","children":[]},{"level":2,"title":"String Related","slug":"string-related","link":"#string-related","children":[]},{"level":2,"title":"Object Related","slug":"object-related","link":"#object-related","children":[]},{"level":2,"title":"Date Related","slug":"date-related","link":"#date-related","children":[]},{"level":2,"title":"Link Related","slug":"link-related","link":"#link-related","children":[]}],"git":{"updatedTime":1712713228000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":1},{"name":"Xinyu Liu","email":"meteor.lxy@foxmail.com","commits":1}]},"autoDesc":true,"filePathRelative":"tools/helper/shared.md"}');export{d as comp,u as data};
