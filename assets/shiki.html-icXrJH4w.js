import{_ as l,r as a,c as n,a as t,b as e,d as i,o}from"./app-vjlVxZXw.js";const r={},p=e("h1",{id:"shiki",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#shiki"},[e("span",null,"shiki")])],-1),c=i(`<p>This plugin will enable syntax highlighting for markdown code fence with <a href="https://shiki.style/" target="_blank" rel="noopener noreferrer">Shiki</a>.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><a href="https://shiki.matsu.io/" target="_blank" rel="noopener noreferrer">Shiki</a> is the syntax highlighter being used by VSCode. It has higher fidelity, but it could be slower than <a href="https://prismjs.com/" target="_blank" rel="noopener noreferrer">Prism.js</a>, especially when you have a lot of code blocks.</p><p>You could consider disabling this plugin in <code>dev</code> mode to get better development experience.</p></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><div class="language-bash" data-ext="sh" data-title="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">npm</span><span style="color:#CE9178;"> i</span><span style="color:#569CD6;"> -D</span><span style="color:#CE9178;"> @vuepress/plugin-shiki@next</span></span>
<span class="line"></span></code></pre></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">shikiPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/plugin-shiki&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#DCDCAA;">    shikiPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">      // options</span></span>
<span class="line"><span style="color:#9CDCFE;">      langs:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;ts&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;json&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;vue&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;md&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;bash&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;diff&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>Options</span></a></h2><h3 id="langs" tabindex="-1"><a class="header-anchor" href="#langs"><span>langs</span></a></h3><ul><li><p>Type: <code>ShikiLang[]</code></p></li><li><p>Details:</p><p>Languages of code blocks to be parsed by Shiki.</p><p>This option will be forwarded to <code>getHighlighter()</code> method of Shiki.</p><p>You&#39;d better provide the languages list you are using explicitly, otherwise Shiki will load all languages and can affect performance.</p></li><li><p>Also see:</p><ul><li><a href="https://shiki.style/languages" target="_blank" rel="noopener noreferrer">Shiki &gt; Languages</a></li></ul></li></ul><h3 id="theme" tabindex="-1"><a class="header-anchor" href="#theme"><span>theme</span></a></h3><ul><li><p>Type: <code>ShikiTheme</code></p></li><li><p>Default: <code>&#39;nord&#39;</code></p></li><li><p>Details:</p><p>Theme of Shiki.</p><p>This option will be forwarded to <code>codeToHtml()</code> method of Shiki.</p></li><li><p>Also see:</p><ul><li><a href="https://shiki.style/themes" target="_blank" rel="noopener noreferrer">Shiki &gt; Themes</a></li></ul></li></ul><h3 id="themes" tabindex="-1"><a class="header-anchor" href="#themes"><span>themes</span></a></h3><ul><li><p>Type: <code>Record&lt;&#39;dark&#39; | &#39;light&#39;, ShikiTheme&gt;</code></p></li><li><p>Details:</p><p>Dark / Light Dual themes of Shiki.</p><p>This option will be forwarded to <code>codeToHtml()</code> method of Shiki.</p></li><li><p>Also see:</p><ul><li><a href="https://shiki.style/guide/dual-themes" target="_blank" rel="noopener noreferrer">Shiki &gt; Dual Themes</a></li></ul></li></ul><h3 id="transformers" tabindex="-1"><a class="header-anchor" href="#transformers"><span>transformers</span></a></h3><ul><li><p>Type: <code>ShikiTransformer[]</code></p></li><li><p>Details:</p><p>Transformers of Shiki.</p><p>This option will be forwarded to <code>codeToHtml()</code> method of Shiki.</p></li><li><p>Also see:</p><ul><li><a href="https://shiki.style/guide/transformers" target="_blank" rel="noopener noreferrer">Shiki &gt; Transformers</a></li></ul></li></ul>`,14);function h(d,m){const s=a("NpmBadge");return o(),n("div",null,[p,t(s,{package:"@vuepress/plugin-shiki"}),c])}const g=l(r,[["render",h],["__file","shiki.html.vue"]]),y=JSON.parse('{"path":"/plugins/shiki.html","title":"shiki","lang":"en-US","frontmatter":{"description":"shiki","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://ecosystem.vuejs.press/ecosystem/zh/plugins/shiki.html"}],["meta",{"property":"og:url","content":"https://ecosystem.vuejs.press/ecosystem/plugins/shiki.html"}],["meta",{"property":"og:site_name","content":"VuePress Ecosystem"}],["meta",{"property":"og:title","content":"shiki"}],["meta",{"property":"og:description","content":"shiki"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-25T05:46:54.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-25T05:46:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"shiki\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-25T05:46:54.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://ecosystem.vuejs.press/ecosystem/atom.xml","title":"VuePress Ecosystem Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://ecosystem.vuejs.press/ecosystem/feed.json","title":"VuePress Ecosystem JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://ecosystem.vuejs.press/ecosystem/rss.xml","title":"VuePress Ecosystem RSS Feed"}]]},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Options","slug":"options","link":"#options","children":[{"level":3,"title":"langs","slug":"langs","link":"#langs","children":[]},{"level":3,"title":"theme","slug":"theme","link":"#theme","children":[]},{"level":3,"title":"themes","slug":"themes","link":"#themes","children":[]},{"level":3,"title":"transformers","slug":"transformers","link":"#transformers","children":[]}]}],"git":{"updatedTime":1711345614000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":4}]},"autoDesc":true,"filePathRelative":"plugins/shiki.md"}');export{g as comp,y as data};
