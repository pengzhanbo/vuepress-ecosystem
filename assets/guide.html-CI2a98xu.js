import{_ as c,r as a,c as p,b as e,e as n,a as s,w as o,d as l,o as r}from"./app-vjlVxZXw.js";const d={},m=l(`<h1 id="guide" tabindex="-1"><a class="header-anchor" href="#guide"><span>Guide</span></a></h1><h2 id="setting-options" tabindex="-1"><a class="header-anchor" href="#setting-options"><span>Setting Options</span></a></h2><p>You can both set options with plugin options on Node side and set options in <a href="https://vuejs.press/guide/configuration.html#client-config-file" target="_blank" rel="noopener noreferrer">client config file</a> on Browser side.</p><h3 id="with-plugin-options" tabindex="-1"><a class="header-anchor" href="#with-plugin-options"><span>With Plugin Options</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">commentPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/plugin-comment&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// .vuepress/config.ts</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#DCDCAA;">    commentPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      provider:</span><span style="color:#CE9178;"> &#39;Artalk&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#6A9955;">// Artalk | Giscus | Waline | Twikoo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">      // other options here</span></span>
<span class="line"><span style="color:#6A9955;">      // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="with-client-config-file" tabindex="-1"><a class="header-anchor" href="#with-client-config-file"><span>With Client Config File</span></a></h3><div class="language-typescript line-numbers-mode" data-ext="ts" data-title=".vuepress/client.ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineClientConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vuepress/client&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">  defineArtalkConfig</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">  // defineGiscusConfig,</span></span>
<span class="line"><span style="color:#6A9955;">  // defineTwikooConfig,</span></span>
<span class="line"><span style="color:#6A9955;">  // defineWalineConfig,</span></span>
<span class="line"><span style="color:#D4D4D4;">} </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/plugin-comment/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">defineArtalkConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // 选项</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineClientConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>But here are some limitations you should remember:</p>`,8),u=e("p",null,[e("code",null,"provider"),n(", locales and other resource related option must be set in plugin options.")],-1),h=e("p",null,"To ensure tree-shaking works, we must optimize entries at node so that bundler can understand which resource should be included in the final bundle.",-1),g=e("p",null,"Options which can not be serialized to JSON must be set in client config.",-1),v=e("p",null,"Options that receives function values can not be set in plugin options, as plugins are running under Node.js environment, so we can not pass these values and their contexts to browser.",-1),y=l('<h2 id="adding-comment" tabindex="-1"><a class="header-anchor" href="#adding-comment"><span>Adding Comment</span></a></h2><p>This plugin globally registers a component <code>&lt;CommentService /&gt;</code>.</p><ul><li>If you are a user, you should use <code>alias</code> and layout slots to insert the component. We recommended you to insert the comment component (<code>&lt;CommentService /&gt;</code>) after the <code>&lt;PageNav /&gt;</code> component, and the current page is a demo with default theme.</li><li>If you are a theme developer, you should insert this component in the layout of your theme.</li></ul><p>By default, <code>&lt;CommentService /&gt;</code> component is enabled globally, and you can use <code>comment</code> option in both plugin options and page frontmatter to control it.</p><ul><li>You can disable it locally by setting <code>comment: false</code> in page frontmatter.</li><li>To keep it globally disabled, please set <code>comment</code> to <code>false</code> in the plugin options. Then you can set <code>comment: true</code> in page frontmatter to enable it locally.</li></ul><p>You can set <code>commentID</code> option in page frontmatter to customize comment ID, which is used to identify comment storage item to use for a page. By default it will be the <code>path</code> of the page, which means if you are deploying the site to multiple places, page with same content across sites will share the same comment data.</p><h2 id="available-comment-services" tabindex="-1"><a class="header-anchor" href="#available-comment-services"><span>Available Comment Services</span></a></h2>',7),f=e("div",{class:"custom-container tip"},[e("p",{class:"custom-container-title"},"Recommended comment services"),e("ul",null,[e("li",null,"Facing programmers and developers: Giscus"),e("li",null,"Facing general public: Waline")])],-1),b=e("h2",{id:"common-options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#common-options"},[e("span",null,"Common Options")])],-1),D={id:"provider",tabindex:"-1"},C={class:"header-anchor",href:"#provider"},_=l('<ul><li>Type: <code>&quot;Artalk&quot; | &quot;Giscus&quot; | &quot;Twikoo&quot; | &quot;Waline&quot; | &quot;None&quot;</code></li><li>Default: <code>&quot;None&quot;</code></li><li>Details: Comment service provider.</li></ul><h3 id="comment" tabindex="-1"><a class="header-anchor" href="#comment"><span>comment</span></a></h3><ul><li>Type: <code>boolean</code></li><li>Default: <code>true</code></li><li>Details: Whether to enable comment feature by default.</li></ul>',3);function k(w,x){const i=a("Badge"),t=a("RouteLink");return r(),p("div",null,[m,e("ul",null,[e("li",null,[u,h,e("p",null,[n("These options will be marked with "),s(i,{text:"Plugin Option Only",type:"warning",vertical:"baseline"}),n(" in config reference.")])]),e("li",null,[g,v,e("p",null,[n("These options will be marked with "),s(i,{text:"Client Config Only",type:"warning",vertical:"baseline"}),n(" in config reference.")])])]),y,e("p",null,[n("Currently, you can choose from "),s(t,{to:"/plugins/comment/giscus/"},{default:o(()=>[n("Giscus")]),_:1}),n(", "),s(t,{to:"/plugins/comment/waline/"},{default:o(()=>[n("Waline")]),_:1}),n(", "),s(t,{to:"/plugins/comment/artalk/"},{default:o(()=>[n("Artalk")]),_:1}),n(" and "),s(t,{to:"/plugins/comment/twikoo/"},{default:o(()=>[n("Twikoo")]),_:1}),n(".")]),f,b,e("h3",D,[e("a",C,[e("span",null,[n("provider "),s(i,{text:"Plugin Option Only",type:"warning"})])])]),_])}const E=c(d,[["render",k],["__file","guide.html.vue"]]),O=JSON.parse('{"path":"/plugins/comment/guide.html","title":"Guide","lang":"en-US","frontmatter":{"layout":"CommentPage","description":"Guide Setting Options You can both set options with plugin options on Node side and set options in client config file on Browser side. With Plugin Options With Client Config Fil...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://ecosystem.vuejs.press/ecosystem/zh/plugins/comment/guide.html"}],["meta",{"property":"og:url","content":"https://ecosystem.vuejs.press/ecosystem/plugins/comment/guide.html"}],["meta",{"property":"og:site_name","content":"VuePress Ecosystem"}],["meta",{"property":"og:title","content":"Guide"}],["meta",{"property":"og:description","content":"Guide Setting Options You can both set options with plugin options on Node side and set options in client config file on Browser side. With Plugin Options With Client Config Fil..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-21T04:35:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-21T04:35:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Guide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-21T04:35:42.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://ecosystem.vuejs.press/ecosystem/atom.xml","title":"VuePress Ecosystem Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://ecosystem.vuejs.press/ecosystem/feed.json","title":"VuePress Ecosystem JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://ecosystem.vuejs.press/ecosystem/rss.xml","title":"VuePress Ecosystem RSS Feed"}]]},"headers":[{"level":2,"title":"Setting Options","slug":"setting-options","link":"#setting-options","children":[{"level":3,"title":"With Plugin Options","slug":"with-plugin-options","link":"#with-plugin-options","children":[]},{"level":3,"title":"With Client Config File","slug":"with-client-config-file","link":"#with-client-config-file","children":[]}]},{"level":2,"title":"Adding Comment","slug":"adding-comment","link":"#adding-comment","children":[]},{"level":2,"title":"Available Comment Services","slug":"available-comment-services","link":"#available-comment-services","children":[]},{"level":2,"title":"Common Options","slug":"common-options","link":"#common-options","children":[{"level":3,"title":"provider","slug":"provider","link":"#provider","children":[]},{"level":3,"title":"comment","slug":"comment","link":"#comment","children":[]}]}],"git":{"updatedTime":1713674142000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2}]},"autoDesc":true,"filePathRelative":"plugins/comment/guide.md"}');export{E as comp,O as data};
