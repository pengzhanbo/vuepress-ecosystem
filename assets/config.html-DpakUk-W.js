import{_ as i,r as o,c as p,b as s,e,a as l,d as a,o as t}from"./app-vjlVxZXw.js";const r={},c=a(`<h1 id="waline-config" tabindex="-1"><a class="header-anchor" href="#waline-config"><span>Waline Config</span></a></h1><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config"><span>Config</span></a></h2><h3 id="serverurl" tabindex="-1"><a class="header-anchor" href="#serverurl"><span>serverURL</span></a></h3><ul><li>Type: <code>string</code></li><li>Required: Yes</li><li>Details: Waline server address url</li></ul><h3 id="emoji" tabindex="-1"><a class="header-anchor" href="#emoji"><span>emoji</span></a></h3><ul><li><p>Type: <code>(string | WalineEmojiInfo)[] | false</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> WalineEmojiPresets</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">\`http://</span><span style="color:#569CD6;">\${</span><span style="color:#4EC9B0;">string</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">\`https://</span><span style="color:#569CD6;">\${</span><span style="color:#4EC9B0;">string</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> WalineEmojiInfo</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Emoji name show on tab</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  name</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Current folder link</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  folder</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Common prefix of Emoji icons</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  prefix</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Type of Emoji icons, will be regarded as file extension</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  type</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Emoji icon show on tab</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  icon</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Emoji image list</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  items</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Default: <code>[&#39;//unpkg.com/@waline/emojis@1.1.0/weibo&#39;]</code></p></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/guide/features/emoji.html" target="_blank" rel="noopener noreferrer">Guide → Emoji</a></li></ul></li><li><p>Details: Emoji settings.</p></li></ul><h3 id="dark" tabindex="-1"><a class="header-anchor" href="#dark"><span>dark</span></a></h3><ul><li><p>Type: <code>string | boolean</code></p></li><li><p>Default: <code>false</code></p></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/guide/features/style.html" target="_blank" rel="noopener noreferrer">Custom Style</a></li></ul></li><li><p>Details:</p><p>Darkmode support</p><ul><li>Setting a boolean will set the dark mode according to its value.</li><li>Set it to <code>&#39;auto&#39;</code> will display darkmode due to device settings.</li><li>Filling in a CSS selector will enable darkmode only when the selector match waline ancestor nodes.</li></ul></li></ul><h3 id="commentsorting" tabindex="-1"><a class="header-anchor" href="#commentsorting"><span>commentSorting</span></a></h3><ul><li><p>Type: <code>WalineCommentSorting</code></p></li><li><p>Default: <code>&#39;latest&#39;</code></p></li><li><p>Details:</p><p>Comment list sorting methods.</p><p>Optional values: <code>&#39;latest&#39;</code>, <code>&#39;oldest&#39;</code>, <code>&#39;hottest&#39;</code></p></li></ul><h3 id="meta" tabindex="-1"><a class="header-anchor" href="#meta"><span>meta</span></a></h3><ul><li><p>Type: <code>string[]</code></p></li><li><p>Default: <code>[&#39;nick&#39;,&#39;mail&#39;,&#39;link&#39;]</code></p></li><li><p>Details:</p><p>Reviewer attributes.</p><p>Optional values: <code>&#39;nick&#39;</code>, <code>&#39;mail&#39;</code>, <code>&#39;link&#39;</code></p></li></ul><h3 id="requiredmeta" tabindex="-1"><a class="header-anchor" href="#requiredmeta"><span>requiredMeta</span></a></h3><ul><li><p>Type: <code>string[]</code></p></li><li><p>Default: <code>[]</code></p></li><li><p>Details:</p><p>Set required fields, optional values:</p><ul><li><code>[]</code></li><li><code>[&#39;nick&#39;]</code></li><li><code>[&#39;nick&#39;,&#39;mail&#39;]</code></li></ul></li></ul><h3 id="login" tabindex="-1"><a class="header-anchor" href="#login"><span>login</span></a></h3><ul><li><p>Type: <code>string</code></p></li><li><p>Default value: <code>&#39;enable&#39;</code></p></li><li><p>Details:</p><p>Login mode status, optional values:</p><ul><li><code>&#39;enable&#39;</code>: enable login (default)</li><li><code>&#39;disable&#39;</code>: Login is disabled, users should fill in information to comment</li><li><code>&#39;force&#39;</code>: Forced login, users must login to comment</li></ul></li></ul><h3 id="wordlimit" tabindex="-1"><a class="header-anchor" href="#wordlimit"><span>wordLimit</span></a></h3><ul><li><p>Type: <code>number | [number, number]</code></p></li><li><p>Default: <code>0</code></p></li><li><p>Details:</p><p>Comment words limit. When a single number is filled in, it &#39;s the maximum number of comment words. No limit when set to <code>0</code>.</p></li></ul><h3 id="pagesize" tabindex="-1"><a class="header-anchor" href="#pagesize"><span>pageSize</span></a></h3><ul><li><p>Type: <code>number</code></p></li><li><p>Default: <code>10</code></p></li><li><p>Details:</p><p>Number of comments per page.</p></li></ul>`,20),d={id:"imageuploader",tabindex:"-1"},u={class:"header-anchor",href:"#imageuploader"},y=a(`<ul><li><p>Type: <code>WalineImageUploader | false</code></p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> WalineImageUploader</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">image</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">File</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span></code></pre></div></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/cookbook/customize/upload-image.html" target="_blank" rel="noopener noreferrer">Cookbook → Upload Image</a></li></ul></li><li><p>Details:</p><p>Custom image upload method. The default behavior is to embed images Base 64 encoded, you can set this to <code>false</code> to disable image uploading.</p><p>The function should receive an image object and return a Promise that provides the image address.</p></li></ul>`,1),m={id:"highlighter",tabindex:"-1"},D={class:"header-anchor",href:"#highlighter"},h=a(`<ul><li><p>Type: <code>WalineHighlighter | false</code></p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> WalineHighlighter</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">code</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">lang</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> string</span></span>
<span class="line"></span></code></pre></div></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/cookbook/customize/highlighter.html" target="_blank" rel="noopener noreferrer">Cookbook → Customize Highlighter</a></li></ul></li><li><p>Details:</p><p><strong>Code highlighting</strong>, use <code>hanabi</code> by default. The function passes in original content of code block and language of the code block. You should return a string directly.</p><p>You can pass in a code highlighter of your own, or set to <code>false</code> to disable code highlighting.</p></li></ul>`,1),g={id:"texrenderer",tabindex:"-1"},v={class:"header-anchor",href:"#texrenderer"},C=a(`<ul><li><p>Type: <code>WalineTexRenderer | false</code></p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> WalineTexRenderer</span><span style="color:#D4D4D4;"> = (</span><span style="color:#9CDCFE;">blockMode</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">boolean</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">tex</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> string</span></span>
<span class="line"></span></code></pre></div></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/cookbook/customize/tex-renderer.html" target="_blank" rel="noopener noreferrer">Cookbook → Customize TeX Renderer</a></li><li><a href="https://www.mathjax.org/" target="_blank" rel="noopener noreferrer">MathJax</a></li><li><a href="https://katex.org/" target="_blank" rel="noopener noreferrer">KaTeX</a></li></ul></li><li><p>Details:</p><p>Customize TeX rendering, the default behavior is to prompt that the preview mode does not support TeX. The function provides two parameters, the first parameter indicates whether it should be rendered in block level, and the second parameter is the string of the TeX content, and return a HTML string as render result.</p><p>You can import TeX renderer to provide preview feature. We recommend you to use Katex or MathJax, or you can set to <code>false</code> to disable parsing TeX.</p></li></ul>`,1),b={id:"search",tabindex:"-1"},f={class:"header-anchor",href:"#search"},E=a(`<ul><li><p>Type: <code>WalineSearchOptions | false</code></p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> WalineSearchImageData</span><span style="color:#569CD6;"> extends</span><span style="color:#4EC9B0;"> Record</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#4EC9B0;">unknown</span><span style="color:#D4D4D4;">&gt; {</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Image link</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  src</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Image title</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@description</span><span style="color:#6A9955;"> Used for alt attribute of image</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  title</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Image preview link</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@description</span><span style="color:#6A9955;"> For better loading performance, we will use this thumbnail first in the list</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@default</span><span style="color:#9CDCFE;"> src</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#9CDCFE;">  preview</span><span style="color:#D4D4D4;">?: </span><span style="color:#4EC9B0;">string</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">type</span><span style="color:#4EC9B0;"> WalineSearchResult</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">WalineSearchImageData</span><span style="color:#D4D4D4;">[]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> WalineSearchOptions</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Search action</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#DCDCAA;">  search</span><span style="color:#D4D4D4;">: (</span><span style="color:#9CDCFE;">word</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">WalineSearchResult</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Default result when opening list</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@default</span><span style="color:#9CDCFE;"> ()</span><span style="color:#6A9955;"> =&gt; search(&#39;&#39;)</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#DCDCAA;">  default</span><span style="color:#D4D4D4;">?: () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">WalineSearchResult</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">  /**</span></span>
<span class="line"><span style="color:#6A9955;">   * Fetch more action</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@description</span><span style="color:#6A9955;"> It will be triggered when the list scrolls to the bottom. If your search service supports paging, you should set this to achieve infinite scrolling</span></span>
<span class="line"><span style="color:#6A9955;">   *</span></span>
<span class="line"><span style="color:#6A9955;">   * </span><span style="color:#569CD6;">@default</span><span style="color:#9CDCFE;"> (word)</span><span style="color:#6A9955;"> =&gt; search(word)</span></span>
<span class="line"><span style="color:#6A9955;">   */</span></span>
<span class="line"><span style="color:#DCDCAA;">  more</span><span style="color:#D4D4D4;">?: (</span><span style="color:#9CDCFE;">word</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">currentCount</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">WalineSearchResult</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Details: Customize search features, you can disable search function by setting it to <code>false</code>.</p></li></ul><h3 id="recaptchav3key" tabindex="-1"><a class="header-anchor" href="#recaptchav3key"><span>recaptchaV3Key</span></a></h3><ul><li><p>Type: <code>string</code></p></li><li><p>Details:</p><p>reCAPTCHA V3 is a captcha service provided by Google. You can add reCAPTCHA V3 site key with <code>recaptchaV3Key</code> to enable it.</p><p>You should also set environment variable <code>RECAPTCHA_V3_SECRET</code> for server.</p></li></ul><h3 id="reaction" tabindex="-1"><a class="header-anchor" href="#reaction"><span>reaction</span></a></h3><ul><li><p>Type: <code>boolean | string[]</code></p></li><li><p>Default: <code>false</code></p></li><li><p>Details:</p><p>Add emoji interaction function to the article, set it to <code>true</code> to provide the default emoji, you can also customize the emoji image by setting the emoji url array, and supports a maximum of 8 emojis.</p></li></ul>`,5),k={id:"metaicon",tabindex:"-1"},A={class:"header-anchor",href:"#metaicon"},x=s("ul",null,[s("li",null,[e("Type: "),s("code",null,"boolean")]),s("li",null,[e("Default: "),s("code",null,"true")]),s("li",null,"Details: Whether import meta icon.")],-1),_={id:"locales",tabindex:"-1"},w={class:"header-anchor",href:"#locales"},B=a(`<ul><li><p>Type: <code>WalineLocales</code></p><div class="language-typescript" data-ext="ts" data-title="ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> WalineLocales</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  [</span><span style="color:#9CDCFE;">localePath</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">string</span><span style="color:#D4D4D4;">]: </span><span style="color:#4EC9B0;">WalineLocale</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div></li><li><p>Reference:</p><ul><li><a href="https://waline.js.org/en/cookbook/customize/locale.html" target="_blank" rel="noopener noreferrer">Waline Locales</a></li></ul></li><li><p>Details: Waline locales.</p></li></ul><h2 id="plugin-config" tabindex="-1"><a class="header-anchor" href="#plugin-config"><span>Plugin Config</span></a></h2><p>You can directly configure serializable options in the plugin options:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title=".vuepress/config.ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineUserConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vuepress&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">commentPlugin</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/plugin-comment&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineUserConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">  plugins:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#DCDCAA;">    commentPlugin</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#9CDCFE;">      provider:</span><span style="color:#CE9178;"> &#39;Waline&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#6A9955;">      // other options</span></span>
<span class="line"><span style="color:#6A9955;">      // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">    }),</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="client-config" tabindex="-1"><a class="header-anchor" href="#client-config"><span>Client Config</span></a></h2><p>You can use the <code>defineWalineConfig</code> function to customize Waline:</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title=".vuepress/client.ts"><pre class="shiki dark-plus" style="background-color:#1E1E1E;color:#D4D4D4;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineClientConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vuepress/client&#39;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">defineWalineConfig</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;@vuepress/plugin-comment/client&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">defineWalineConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // Waline config</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#DCDCAA;"> defineClientConfig</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#6A9955;">  // ...</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function j(T,W){const n=o("Badge");return t(),p("div",null,[c,s("h3",d,[s("a",u,[s("span",null,[e("imageUploader "),l(n,{text:"Client Config Only",type:"warning"})])])]),y,s("h3",m,[s("a",D,[s("span",null,[e("highlighter "),l(n,{text:"Client Config Only",type:"warning"})])])]),h,s("h3",g,[s("a",v,[s("span",null,[e("texRenderer "),l(n,{text:"Client Config Only",type:"warning"})])])]),C,s("h3",b,[s("a",f,[s("span",null,[e("search "),l(n,{text:"Client Config Only",type:"warning"})])])]),E,s("h3",k,[s("a",A,[s("span",null,[e("metaIcon "),l(n,{text:"Plugin Option Only",type:"warning"})])])]),x,s("h3",_,[s("a",w,[s("span",null,[e("locales "),l(n,{text:"Plugin Option Only",type:"warning"})])])]),B])}const R=i(r,[["render",j],["__file","config.html.vue"]]),S=JSON.parse(`{"path":"/plugins/comment/waline/config.html","title":"Waline Config","lang":"en-US","frontmatter":{"description":"Waline Config Config serverURL Type: string Required: Yes Details: Waline server address url emoji Type: (string | WalineEmojiInfo)[] | false Default: ['//unpkg.com/@waline/emoj...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://ecosystem.vuejs.press/ecosystem/zh/plugins/comment/waline/config.html"}],["meta",{"property":"og:url","content":"https://ecosystem.vuejs.press/ecosystem/plugins/comment/waline/config.html"}],["meta",{"property":"og:site_name","content":"VuePress Ecosystem"}],["meta",{"property":"og:title","content":"Waline Config"}],["meta",{"property":"og:description","content":"Waline Config Config serverURL Type: string Required: Yes Details: Waline server address url emoji Type: (string | WalineEmojiInfo)[] | false Default: ['//unpkg.com/@waline/emoj..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-21T04:35:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-21T04:35:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Waline Config\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-21T04:35:42.000Z\\",\\"author\\":[]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://ecosystem.vuejs.press/ecosystem/atom.xml","title":"VuePress Ecosystem Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://ecosystem.vuejs.press/ecosystem/feed.json","title":"VuePress Ecosystem JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://ecosystem.vuejs.press/ecosystem/rss.xml","title":"VuePress Ecosystem RSS Feed"}]]},"headers":[{"level":2,"title":"Config","slug":"config","link":"#config","children":[{"level":3,"title":"serverURL","slug":"serverurl","link":"#serverurl","children":[]},{"level":3,"title":"emoji","slug":"emoji","link":"#emoji","children":[]},{"level":3,"title":"dark","slug":"dark","link":"#dark","children":[]},{"level":3,"title":"commentSorting","slug":"commentsorting","link":"#commentsorting","children":[]},{"level":3,"title":"meta","slug":"meta","link":"#meta","children":[]},{"level":3,"title":"requiredMeta","slug":"requiredmeta","link":"#requiredmeta","children":[]},{"level":3,"title":"login","slug":"login","link":"#login","children":[]},{"level":3,"title":"wordLimit","slug":"wordlimit","link":"#wordlimit","children":[]},{"level":3,"title":"pageSize","slug":"pagesize","link":"#pagesize","children":[]},{"level":3,"title":"imageUploader","slug":"imageuploader","link":"#imageuploader","children":[]},{"level":3,"title":"highlighter","slug":"highlighter","link":"#highlighter","children":[]},{"level":3,"title":"texRenderer","slug":"texrenderer","link":"#texrenderer","children":[]},{"level":3,"title":"search","slug":"search","link":"#search","children":[]},{"level":3,"title":"recaptchaV3Key","slug":"recaptchav3key","link":"#recaptchav3key","children":[]},{"level":3,"title":"reaction","slug":"reaction","link":"#reaction","children":[]},{"level":3,"title":"metaIcon","slug":"metaicon","link":"#metaicon","children":[]},{"level":3,"title":"locales","slug":"locales","link":"#locales","children":[]}]},{"level":2,"title":"Plugin Config","slug":"plugin-config","link":"#plugin-config","children":[]},{"level":2,"title":"Client Config","slug":"client-config","link":"#client-config","children":[]}],"git":{"updatedTime":1713674142000,"contributors":[{"name":"Mr.Hope","email":"mister-hope@outlook.com","commits":2}]},"autoDesc":true,"filePathRelative":"plugins/comment/waline/config.md"}`);export{R as comp,S as data};
